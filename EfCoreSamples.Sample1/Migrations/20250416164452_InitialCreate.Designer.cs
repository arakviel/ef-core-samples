// <auto-generated />
using EfCoreSamples.Sample1.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EfCoreSamples.Sample1.Migrations
{
    [DbContext(typeof(ConventionsDbContext))]
    [Migration("20250416164452_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.4");

            modelBuilder.Entity("ClubStudent", b =>
                {
                    b.Property<int>("ClubsId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("StudentsId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ClubsId", "StudentsId");

                    b.HasIndex("StudentsId");

                    b.ToTable("ClubStudent");
                });

            modelBuilder.Entity("EfCoreSamples.Sample1.Models.Conventions.Club", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Clubs");
                });

            modelBuilder.Entity("EfCoreSamples.Sample1.Models.Conventions.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("StudentId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("StudentId");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("EfCoreSamples.Sample1.Models.Conventions.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("EfCoreSamples.Sample1.Models.Conventions.StudentProfile", b =>
                {
                    b.Property<int>("StudentId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("StudentId");

                    b.ToTable("StudentProfiles");
                });

            modelBuilder.Entity("ClubStudent", b =>
                {
                    b.HasOne("EfCoreSamples.Sample1.Models.Conventions.Club", null)
                        .WithMany()
                        .HasForeignKey("ClubsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EfCoreSamples.Sample1.Models.Conventions.Student", null)
                        .WithMany()
                        .HasForeignKey("StudentsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EfCoreSamples.Sample1.Models.Conventions.Course", b =>
                {
                    b.HasOne("EfCoreSamples.Sample1.Models.Conventions.Student", "Student")
                        .WithMany("Courses")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");
                });

            modelBuilder.Entity("EfCoreSamples.Sample1.Models.Conventions.StudentProfile", b =>
                {
                    b.HasOne("EfCoreSamples.Sample1.Models.Conventions.Student", "Student")
                        .WithOne("Profile")
                        .HasForeignKey("EfCoreSamples.Sample1.Models.Conventions.StudentProfile", "StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");
                });

            modelBuilder.Entity("EfCoreSamples.Sample1.Models.Conventions.Student", b =>
                {
                    b.Navigation("Courses");

                    b.Navigation("Profile");
                });
#pragma warning restore 612, 618
        }
    }
}
